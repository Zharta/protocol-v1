{"notice": "The liquidity controls contract exists as the first and simple layer of automated risk management", "methods": {"changeMaxPoolShareConditions(bool,uint256)": {"notice": "Sets the parameters for the Max Pool Share control, the maximum share that a single lender can take from a lending pool"}, "changeMaxLoansPoolShareConditions(bool,uint256)": {"notice": "Sets the parameters for the Max Loans Pool Share control, the maximum share that a single borrower can represent from the total amount of borrowed funds"}, "changeMaxCollectionBorrowableAmount(bool,address,uint256)": {"notice": "Sets the parameters for the Max Collection Borrowable Amount control, the maximum share that a single collection can represent from the total amount of borrowed funds"}, "changeLockPeriodConditions(bool,uint256)": {"notice": "Sets the parameters for the Lock Period control, the lock period applicable for deposits in lending pools, i.e. for each new deposit, it can\u2019t be withdrawn before the lock period finishes. If the lender already has an ongoing lock period, a new deposit won\u2019t extend the lock period"}}}
{"title": "LiquidityControls", "author": "[Zharta](https://zharta.io/)", "details": "Does not rely on a data contract", "methods": {"changeMaxPoolShareConditions(bool,uint256)": {"details": "Logs `MaxPoolShareFlagChanged` and `MaxPoolShareChanged` events", "params": {"_flag": "Enables / disable the Max Pool Share control", "_value": "Sets the Max Pool Share value (bps) to use if `_flag` enables it"}}, "changeMaxLoansPoolShareConditions(bool,uint256)": {"details": "Logs `MaxLoansPoolShareFlagChanged` and `MaxLoansPoolShareChanged` events", "params": {"_flag": "Enables / disable the Max Loans Pool Share control", "_value": "Sets the Max Loans Pool Share value (bps) to use if `_flag` enables it"}}, "changeMaxCollectionBorrowableAmount(bool,address,uint256)": {"details": "Logs `MaxCollectionBorrowableAmountFlagChanged` and `MaxCollectionBorrowableAmountChanged` events", "params": {"_flag": "Enables / disable the Max Collection Borrowable Amount control", "_collectionAddress": "the address of the collection the control applies to", "_value": "Sets the Max Collection Borrowable Amount value (wei) to use if `_flag` enables it"}}, "changeLockPeriodConditions(bool,uint256)": {"details": "Logs `LockPeriodFlagChanged` and `LockPeriodDurationChanged` events", "params": {"_flag": "Enables / disable the Lock Period control", "_value": "Sets the Lock Period value (seconds) to use if `_flag` enables it"}}}}
